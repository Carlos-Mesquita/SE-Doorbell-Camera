"""Initial

Revision ID: 29002cdb2372
Revises: 
Create Date: 2025-05-29 17:22:18.597368

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '29002cdb2372'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('rpi_event_id', sa.String(), nullable=True),
    sa.Column('type_str', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_rpi_event_id'), 'notifications', ['rpi_event_id'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('button_debounce', sa.Integer(), nullable=False),
    sa.Column('button_polling_rate', sa.Integer(), nullable=False),
    sa.Column('motion_sensor_debounce', sa.Integer(), nullable=False),
    sa.Column('motion_sensor_polling_rate', sa.Integer(), nullable=False),
    sa.Column('camera_bitrate', sa.Integer(), nullable=False),
    sa.Column('camera_stop_motion_interval', sa.Integer(), nullable=False),
    sa.Column('camera_stop_motion_duration', sa.Integer(), nullable=False),
    sa.Column('color_r', sa.Integer(), nullable=False),
    sa.Column('color_g', sa.Integer(), nullable=False),
    sa.Column('color_b', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_guid'), 'tokens', ['guid'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('captures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fcm_devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('fcm_token', sa.String(), nullable=False),
    sa.Column('physical_device_id', sa.String(), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('app_version', sa.String(length=50), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fcm_devices_fcm_token'), 'fcm_devices', ['fcm_token'], unique=True)
    op.create_index(op.f('ix_fcm_devices_physical_device_id'), 'fcm_devices', ['physical_device_id'], unique=False)
    op.create_index(op.f('ix_fcm_devices_user_id'), 'fcm_devices', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_fcm_devices_user_id'), table_name='fcm_devices')
    op.drop_index(op.f('ix_fcm_devices_physical_device_id'), table_name='fcm_devices')
    op.drop_index(op.f('ix_fcm_devices_fcm_token'), table_name='fcm_devices')
    op.drop_table('fcm_devices')
    op.drop_table('captures')
    op.drop_table('users')
    op.drop_index(op.f('ix_tokens_guid'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('settings')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_rpi_event_id'), table_name='notifications')
    op.drop_table('notifications')
    # ### end Alembic commands ###
